pwd 
ls
cd 指定目錄
git init
git status
touch xxx.file
ls
git add xxx.file
git commit -m "comments..."
git log
可再繼續修改
git status
修改完後,一樣重複做...
git status
git add xxx.file
git commit -m "comment..."
git log

===========================================
查看config 設定
git config --global --list
修改user.name 
git config --global user.name pb
修改user.email
git config --global user.email angela9211@hotmail.com.tw
清空指令
clear

============================================
git 紀錄最新commit版本hash id
cat .git/refs/heads/master
============================================
可將不commit 的檔案加到 .gitignore 裡面
============================================
若repositories是在本機建立的,首次需push至GitHub,步驟:
git remote add <name> <url>
git push --set-upstream GitNotes master
這樣才能push上去 , 否則會失敗 
============================================
從GitHub將資料pull 下來
git pull
============================================
刪除檔案
git rm 'xxx.file'
============================================
檔案更名
git mv oldfile.txt newfile.txt
============================================
顯示工作目錄的索引狀態
git status -s
============================================
重置目前的工作狀態
git reset --hard
============================================
還原其中喔個被改壞的檔案
git checkout master xxx.file

============================================
運算特定檔案的hash值
git hash-object xxx.file
查詢blob 物件
git log
查詢tree 物件
git cat-file -p master
查詢tree物件中所有的blob與tree物件
git cat-file -p <tree hash id>

============================================
僅將「更新」或「刪除」的檔案變更寫入到索引檔中
git add -u 
刪除 - 將工作目錄下的檔案並更新索引檔
git rm filename
刪除 - 刪除索引檔中該檔案, 但布刪除工作索引中的檔案
git rm --cached a.txt
更名 - 同時更新索引與變更工作目錄下的實體檔案
git mv oldname newname
提交 - 把「索引檔」與「目前最新版」比對差異 , 新增一個commit物件
git commit
列出「索引檔」中所有檔案
git ls-files
============================================

============================================
